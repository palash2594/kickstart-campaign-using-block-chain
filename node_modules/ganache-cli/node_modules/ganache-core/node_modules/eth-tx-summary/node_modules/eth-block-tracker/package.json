{
  "_args": [
    [
      "eth-block-tracker@https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
      "/home/palash/Documents/Online courses/Udemy/kickstart/node_modules/ganache-cli/node_modules/ganache-core/node_modules/eth-tx-summary"
    ]
  ],
  "_from": "eth-block-tracker@https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
  "_id": "eth-block-tracker@2.3.1",
  "_inCache": true,
  "_location": "/ganache-cli/ganache-core/eth-tx-summary/eth-block-tracker",
  "_phantomChildren": {
    "async": "2.6.1"
  },
  "_requested": {
    "name": "eth-block-tracker",
    "raw": "eth-block-tracker@https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
    "rawSpec": "https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ganache-cli/ganache-core/eth-tx-summary/web3-provider-engine"
  ],
  "_resolved": "https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
  "_shasum": "ab6d177e5b50128fa06d7ae9e0489c7484bac95e",
  "_shrinkwrap": null,
  "_spec": "eth-block-tracker@https://registry.npmjs.org/eth-block-tracker/-/eth-block-tracker-2.3.1.tgz",
  "_where": "/home/palash/Documents/Online courses/Udemy/kickstart/node_modules/ganache-cli/node_modules/ganache-core/node_modules/eth-tx-summary",
  "author": "",
  "bugs": {
    "url": "https://github.com/kumavis/eth-block-tracker/issues"
  },
  "dependencies": {
    "async-eventemitter": "github:ahultgren/async-eventemitter#fa06e39e56786ba541c180061dbf2c0a5bbf951c",
    "eth-query": "^2.1.0",
    "ethereumjs-tx": "^1.3.3",
    "ethereumjs-util": "^5.1.3",
    "ethjs-util": "^0.1.3",
    "json-rpc-engine": "^3.6.0",
    "pify": "^2.3.0",
    "tape": "^4.6.3"
  },
  "description": "This module walks the Ethereum blockchain, keeping track of the latest block. It uses a web3 provider as a data source and will continuously poll for the next block.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-3": "^6.24.1",
    "browserify": "^14.3.0",
    "mississippi": "^1.3.0"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/kumavis/eth-block-tracker#readme",
  "license": "ISC",
  "main": "dist/index.js",
  "name": "eth-block-tracker",
  "optionalDependencies": {},
  "readme": "\n# eth-block-tracker\n\nThis module walks the Ethereum blockchain, keeping track of the latest block.\nIt uses a web3 provider as a data source and will continuously poll for the next block.\n\n```js\nconst HttpProvider = require('ethjs-provider-http')\nconst BlockTracker = require('eth-block-tracker')\n\nconst provider = new HttpProvider('https://mainnet.infura.io')\nconst blockTracker = new BlockTracker({ provider })\nblockTracker.on('block', console.log)\nblockTracker.start()\n```\n\n### methods\n\n##### new BlockTracker({ provider, pollingInterval })\n\ncreates a new block tracker with `provider` as a data source and\n`pollingInterval` (ms) timeout between polling for the latest block.\n\n##### getCurrentBlock()\n\nsynchronous returns the current block. may be `null`.\n\n```js\nconsole.log(blockTracker.getCurrentBlock())\n```\n\n##### start({ fromBlock })\n\nStart walking from the `fromBlock` (default: `'latest'`) forward.\n`fromBlock` should be a number as a hex encoded string.\n\n```js\nblockTracker.start()\n```\n\n```js\nblockTracker.start({ fromBlock: '0x00' })\n```\n\n##### stop()\n\nStop walking the blockchain.\n\n```js\nblockTracker.stop()\n```\n\n### EVENTS\n\n##### block\n\nThe `block` event is emitted for every block in order.\nUse this event if you want to operate on every block without missing any.\n\n```js\nblockTracker.on('block', (newBlock) => console.log(newBlock))\n```\n\n##### latest\n\nThe `latest` event is emitted for every that is detected to be the latest block.\nThis means skipping a block if there were two created since the last polling period.\nUse this event if you don't care about stale blocks.\n\n```js\nblockTracker.on('latest', (newBlock) => console.log(newBlock))\n```\n\n##### sync\n\nThe `sync` event is emitted the same as \"latest\" but includes the previous block.\n\n```js\nblockTracker.on('sync', ({ newBlock, oldBlock }) => console.log(newBlock, oldBlock))\n```\n\n### NOTES\n\nDoes not currently handle forks.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kumavis/eth-block-tracker.git"
  },
  "scripts": {
    "compile": "babel --presets es2015,stage-3 --plugins transform-runtime -d dist/ lib/",
    "prepublishOnly": "npm run compile",
    "test": "npm run compile && browserify test/basic.js | node"
  },
  "version": "2.3.1"
}
